{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","empty","useState","selectedGood","setSelectedGood","reset","className","type","onClick","map","good","isGoodSelected","ReactDOM","render","document","getElementById"],"mappings":"2NAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,IAAMC,EAAQ,oBACd,EAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQ,kBAAMD,EAAgBH,IAEpC,OACE,uBAAMK,UAAU,oBAAhB,UACE,oBAAIA,UAAU,sCAAd,SACGH,IAAiBF,EAEd,+CACME,EADN,gBAGE,wBACE,UAAQ,cACRI,KAAK,SACLD,UAAU,cACVE,QAASH,OAIbJ,IAIN,uBAAOK,UAAU,QAAjB,SACE,gCACGP,EAAMU,KAAI,SAACC,GACV,IAAMC,EAAiBR,IAAiBO,EAExC,OACE,qBACEJ,UAAWK,GAAkB,+BAC7B,UAAQ,OAFV,UAKE,6BACIR,IAAiBO,EAEf,wBACE,UAAQ,YACRH,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMJ,EAAgBM,IAJjC,eAUA,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAMJ,EAAgBC,IAJjC,iBAYN,oBAAI,UAAQ,YAAYC,UAAU,eAAlC,SACGI,MA5BEA,cChDrBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ccd4b6e2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const empty = 'No goods selected';\n  const [selectedGood, setSelectedGood] = useState('Jam');\n  const reset = () => setSelectedGood(empty);\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood !== empty\n          ? (\n            <>\n              {`${selectedGood} is selected`}\n\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={reset}\n              />\n            </>\n          )\n          : empty\n        }\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map((good) => {\n            const isGoodSelected = selectedGood === good;\n\n            return (\n              <tr\n                className={isGoodSelected && 'has-background-success-light'}\n                data-cy=\"Good\"\n                key={good}\n              >\n                <td>\n                  {(selectedGood !== good)\n                    ? (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => setSelectedGood(good)}\n                      >\n                        +\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={() => setSelectedGood(reset)}\n                      >\n                        -\n                      </button>\n                    )\n                  }\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}